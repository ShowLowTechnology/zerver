## Zerver Notes

Options

-r, --refresh        	Auto-refresh browsers on file changes

-c, --cli            	Creates a js shell to communicate with remote clients press tab to enable

-m, --manifest <paths>  Declare HTML5 appCache manifest files eg. --manifest=cache.manifest  (If the manifest is located in web/cache)manifest)

-p, --production      	Enables production mode (caching, concat, minfiy, gzip, etc)

-P, --port <n>			Set server port to listen on, defaults to process.env.PORT||5000

-V, --verbose			Enable verbose request logging

-l, --less				Automatically compile less into css

Manifest File Structure

The cache.manifest can be used to speed up loading times by caching files and minifying groups of files into one.

For example if you have the following in your cache manifest file: 

# zerver:js/main.min.js
js/cards.js
js/app.js
js/main.js
# /zerver

And the following in your HTML file:

<!-- zerver:js/main.min.js -->
<script src="js/cards.js"></script>
<script src="js/app.js"></script>
<script src="js/main.js"></script>
<!-- /zerver -->

This will create a file called main.min.js containing everything from cards, app and main in a minified format.
Note that for this to work the order, names and number of files must match across both the html and manifest file.

The type of files that can be minified are listed below:
	- application/json
	- application/javascript	
	- text/javascript      		
	- text/css             		
	- text/less
	- text/html          		
	- text/plain
	- text/cache-manifest

less depends on the less module, run command: npm install less --save (--save flag saves the dependancy to your package.json file)

